/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package medical.pkgcase.management;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vish
 */
class Patient
{

    String name, dob, phone_num, id, pastHistory;
    Patient( String i, String n, String d, String p, String ph)
    {
        name = n;
        dob = d;
        phone_num = p;
        id = i;
        pastHistory = ph;
    }
    
    public String getName()
    {
        return name;
    }
    public String getDob()
    {
        return dob;
    }
    public String getPhoneNum()
    {
        return phone_num;
    }
    public String getId()
    {
        return id;
    }
    public String getPH()
    {
        return pastHistory;
    }
}

public class Search extends javax.swing.JFrame {
    ArrayList<Patient> patientDetails = new ArrayList();


    /**
     * Creates new form Search
     */
    public Search() {
        initComponents();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel10 = new javax.swing.JPanel();
        firstNameLabel = new javax.swing.JLabel();
        searchKeyInput = new javax.swing.JTextField();
        searchCriteriaLabel = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        searchCriteriaComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientListTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));
        jPanel10.setName(""); // NOI18N

        firstNameLabel.setText("Search Key");

        searchKeyInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchKeyInputActionPerformed(evt);
            }
        });

        searchCriteriaLabel.setText("Search Criteriia");

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        searchCriteriaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Id", "Name", "Phone Number", "Diagnosis" }));
        searchCriteriaComboBox.setName(""); // NOI18N

        patientListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        patientListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patientListTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(patientListTable);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(searchCriteriaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(firstNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(searchKeyInput)
                                    .addComponent(searchCriteriaComboBox, 0, 133, Short.MAX_VALUE)))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(148, 148, 148)
                                .addComponent(searchButton)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGap(0, 12, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchKeyInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchCriteriaLabel)
                    .addComponent(searchCriteriaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel10.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchKeyInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchKeyInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchKeyInputActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String searchKey = searchKeyInput.getText();
        String searchCriteria = searchCriteriaComboBox.getSelectedItem().toString();
        patientDetails.clear();
        if(searchCriteria.equals("Phone Number"))
        {
            searchCriteria = new String("phone_num");
        }
        
        
        String url = "jdbc:mysql://localhost:3306/medical_case_mgmt?autoReconnect=true&useSSL=false";
        String user = "vjtidev";
        String password = "vjti@123";
        
        
        String query = new String();
        if(searchCriteria.equals(("Diagnosis")))
        {
            query = "select patient_det.id as id,name,dob,phone_num,past_med_history from patient_det,patient_visit_det where patient_det.id = patient_visit_det.patient_id and final_diagnosis like ?";
        }
        else
        {
         query = "SELECT id,name,dob,phone_num,past_med_history from patient_det where "+searchCriteria+" like ?" ;
        }
        
        //String query = "SELECT UNIX_TIMESTAMP(id) as id,name,dob,phone_num,past_med_history from patient_det where "+searchCriteria+" like ?" ;

        try {
            Connection con = DriverManager.getConnection(url, user, password);
            PreparedStatement st = con.prepareStatement(query);
            ResultSet rs;

            st.setString(1,"%" + searchKey + "%");

            //rs = st.executeQuery("SELECT name FROM patient_det");
            
            rs = st.executeQuery();
            
            while(rs.next())
            {
                

                String username = rs.getString("name");
		String dob = rs.getString("dob");
		String phone_num = rs.getString("phone_num");
		String id = rs.getString("id");
		String ph = rs.getString("past_med_history");
		System.out.println("id : " + id);
                Patient p = new Patient(id, username, dob, phone_num, ph);
                patientDetails.add(p);

            }

        } catch (SQLException ex) {
            System.out.println(ex);
        } 
        
        DefaultTableModel model = new DefaultTableModel();

        Object[] columnsName = new Object[4];
        
        columnsName[0] = "Id"; 
        columnsName[1] = "Name";    
        columnsName[2] = "DOB";    
        columnsName[3] = "Phone Num";       
        
        model.setColumnIdentifiers(columnsName);        

        Object[] rowData = new Object[4];        

        for(int i = 0; i < patientDetails.size(); i++)
        {            

            rowData[0] = patientDetails.get(i).getId();
            rowData[1] = patientDetails.get(i).getName();
            rowData[2] = patientDetails.get(i).getDob();
            rowData[3] = patientDetails.get(i).getPhoneNum();
            model.addRow(rowData);

        }

        patientListTable.setModel(model);               
        
    }//GEN-LAST:event_searchButtonActionPerformed

    private void patientListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patientListTableMouseClicked
        // TODO add your handling code here:
        int row = patientListTable.getSelectedRow();
        VisitList vl = new VisitList(patientDetails.get(row).getId(),patientDetails.get(row).getName(),patientDetails.get(row).getPH());
        
        //this.dispose();
    }//GEN-LAST:event_patientListTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientListTable;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox<String> searchCriteriaComboBox;
    private javax.swing.JLabel searchCriteriaLabel;
    private javax.swing.JTextField searchKeyInput;
    // End of variables declaration//GEN-END:variables
}
